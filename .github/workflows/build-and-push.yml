# .github/workflows/build-and-push.yml

name: Build and Push to GHCR

on:
  push: # Run on pushes to main and on any tag push
    branches:
      - "main"
    tags:
      - 'v*.*.*' # e.g. v1.2.3

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # This is the new step that fixes the caching issue.
      # It sets up a buildx instance that supports cache export.
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/halloween-dashboard
          tags: |
            # set latest tag for default branch
            type=raw,value=latest,enable={{is_default_branch}}
            # tag with git commit sha
            type=sha
            # tag with git tag
            type=ref,event=tag

      - name: Set version string
        id: version
        run: |
          # Default to the short SHA from the metadata action
          VERSION=${{ steps.meta.outputs.version }}
          # If it's not a tag build, prefix the version with 'sha-' to be explicit
          if [[ "${{ github.ref_type }}" != "tag" ]]; then
            VERSION="sha-${VERSION}"
          fi
          # For tags, remove the 'v' prefix (e.g., v1.0.0 -> 1.0.0)
          echo "VERSION=${VERSION##v}" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: VERSION=${{ steps.version.outputs.VERSION }}
          cache-from: type=gha,scope=${{ github.workflow }}
          cache-to: type=gha,scope=${{ github.workflow }},mode=max
